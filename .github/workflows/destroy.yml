# https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: destroy

# name of GitHub event that triggers workflow
# https://help.github.com/en/actions/reference/events-that-trigger-workflows#watch-event-watch
on:
  # trigger via webhook
  # https://github.com/adamrushuk/devops-lab/blob/master/TriggerCustomAction.ps1#L28
  repository_dispatch:
    types: [destroy]

  # enable manual workflow
  # https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#manually-running-a-workflow
  workflow_dispatch:
    inputs: {}

# global environment variables
# https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables
env:
  # prefix: used for some globally unique name requirements
  PREFIX: arshz

  # debug
  CI_DEBUG: true

  # azure creds
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

  # other
  # prod or staging
  CERT_API_ENVIRONMENT: staging
  DNS_RG_NAME: rg-dns
  EMAIL_ADDRESS: certadmin@domain.com
  ENABLE_TLS_INGRESS: true
  FORCE_TEST_FAIL: false
  K8S_TLS_SECRET_NAME: tls-secret
  KEY_VAULT_NAME: kv-rush-iz6y
  KEY_VAULT_CERT_NAME: wildcard-thehypepipe-co-uk
  KEY_VAULT_RESOURCE_GROUP_NAME: rg-keyvault-acmebot
  # NOTE: "eastus" is cheaper than "uksouth"
  LOCATION: eastus
  ROOT_DOMAIN_NAME: thehypepipe.co.uk
  # STORAGE_KEY: 'env var set by Get-StorageKey.ps1'
  VELERO_ENABLED: true

  # terraform
  TF_IN_AUTOMATION: "true"
  TF_INPUT: "false"
  TF_VERSION: "0.12.30" # "latest" is supported
  TF_WORKING_DIR: terraform

  # Env var concatenation is currently not supported at Workflow or Job scope. See workaround below:
  # https://github.community/t5/GitHub-Actions/How-can-we-concatenate-multiple-env-vars-at-workflow-and-job/td-p/48489

jobs:
  destroy:

    # always pin versions
    # view installed software: https://help.github.com/en/actions/reference/software-installed-on-github-hosted-runners
    runs-on: ubuntu-18.04

    # only run if owner triggered action
    if: github.actor == github.event.repository.owner.login

    steps:
    # Checkout
    # Reference the major version of a release
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#example-using-versioned-actions
    - uses: actions/checkout@v2
      # specify different branch
      # NOT required as I've changed the default branch to develop
      # with:
      #   ref: develop

    # Env var concatenation
    # https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#environment-files
    - name: Concatenate env vars (Workaround)
      run: |
        chmod -R +x ./scripts/
        echo "AKS_CLUSTER_NAME=${{ env.PREFIX }}-aks-001" >> $GITHUB_ENV
        echo "AKS_RG_NAME=${{ env.PREFIX }}-rg-aks-dev-001" >> $GITHUB_ENV
        echo "ARGOCD_FQDN=argocd.${{ env.ROOT_DOMAIN_NAME }}" >> $GITHUB_ENV
        echo "DNS_DOMAIN_NAME=nexus.${{ env.ROOT_DOMAIN_NAME }}" >> $GITHUB_ENV
        echo "TERRAFORM_STORAGE_ACCOUNT=${{ env.PREFIX }}sttfstate${{ env.LOCATION }}001" >> $GITHUB_ENV
        echo "TERRAFORM_STORAGE_RG=${{ env.PREFIX }}-rg-tfstate-dev-001" >> $GITHUB_ENV
        echo "VELERO_STORAGE_ACCOUNT=${{ env.PREFIX }}stbckuksouth001" >> $GITHUB_ENV
        echo "VELERO_STORAGE_RG=${{ env.PREFIX }}-rg-velero-dev-001" >> $GITHUB_ENV

    # Login
    - name: Login to Azure
      run: ./scripts/azure_login.sh

    # Ensure AKS cluster is running, else timeouts will occur on k8s Terraform resource destroy tasks
    - name: Start AKS Cluster
      continue-on-error: true
      run: ./scripts/start_aks_cluster.sh

    # Prereqs
    - name: Lookup Storage Key
      run: ./scripts/storage_key.sh

    - name: Replace tokens in Terraform config files
      run: pwsh -command "./scripts/Replace-Tokens.ps1"
      env:
        IFTTT_WEBHOOK_KEY: ${{ secrets.IFTTT_WEBHOOK_KEY }}

    - name: Create zip file of Function App
      run: pwsh -command "./function_app/CreateFunctionAppZip.ps1"

    # Terraform
    - uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform destroy
      run: |
        terraform init
        terraform destroy -no-color -auto-approve
      working-directory: ${{ env.TF_WORKING_DIR }}

    # Cleanup
    - name: Delete Storage
      run: ./scripts/storage_delete.sh

    # Notify
    - name: Notify slack
      continue-on-error: true
      env:
        SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      run: ./scripts/send_slack_message.sh "[aks-nexus-velero] Destroy complete"
